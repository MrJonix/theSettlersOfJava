@startuml
' Spieler-Klasse
class Player {
  - id: int
  - name: String
  - resources: Map<ResourceType, int>
  - buildings: List<Building>
  - roads: List<Road>
  + build(location: HexCorner, Building building): void
  + buildRoad(start: HexCorner, end: HexCorner): void
  + tradeWith(other: Player): void
  + calcVictoryPoints(): int
}

' Spielfeld-Klassen
class GameBoard {
  - hexes: List<Hex>
  - roads: List<Road>
  - buildings: List<Building>
  + initializeBoard(): void
  + getAvailableLocations(): List<HexCorner>
}

class Hex {
  - type: HexType
  - numberToken: int
  - position: HexPosition
}

class HexEdge {
  - start: HexCorner
  - end: HexCorner
}

class Road {
  - position: HexEdge
  - owner: Player
}

abstract class Building {
  - location: HexCorner
  - owner: Player
  + getVictoryPoints(): int
}

class Settlement extends Building {
  + getVictoryPoints(): int = 1
}

class City extends Building {
  + getVictoryPoints(): int = 2
}

' Spiel-Controller
class GameController {
  - players: List<Player>
  - board: GameBoard
  - currentPlayer: Player
  + startGame(): void
  + endTurn(): void
  + rollDice(): int
  + distributeResources(numberRolled: int): void
}

' Ressourcentyp-Enum
enum ResourceType {
  Brick
  Lumber
  Wool
  Grain
  Ore
  - displayName: String
  - color: Color
  - imagePath: String
  - tradeValue: int
  + ResourceType(displayName: String, color: String, imagePath: String, tradeValue: int)
  
  + getDisplayName(): String
  + getColor(): Color
  + getImagePath(): String
  + getTradeValue(): int
  + static getRandomResource(): ResourceType
}
' HexTyp-Enum
enum HexType {
  Forest
  Hill
  Field
  Mountain
  Pasture
  Desert

  - displayName: String
  - imagePath: String
  - color: String

  + HexType(displayName: String, imagePath: String, color: String)

  + getDisplayName(): String
  + getImagePath(): String
  + getColor(): String
  + static generateHexTypeList(): List<HexType>
}


' Hilfsklassen
class HexCorner {
  - x: int
  - y: int
}

class HexPosition {
  - q: int
  - r: int
}

class Harbor {
  - location: HexEdge
  - tradeRatio: int
  - resourceType: ResourceType  // null fÃ¼r 3:1-Hafen (Any)
  + getTradeOffer(player: Player): TradeOffer
}

' Beziehungen
Player "1" -- "many" Road
Player "1" -- "many" Building
Player --> ResourceType
HexType --> ResourceType
Building "1" --> "1" HexCorner
HexEdge "1" --> "1" HexCorner : start
HexEdge "1" --> "1" HexCorner : end
Hex "1" -- "1" HexPosition
HexCorner -- Hex : adjacency
Road  -->  HexEdge
Harbor -->  HexEdge
Hex --> HexType
GameController --> Player
GameController --> GameBoard
GameBoard --> Hex
GameBoard --> Building
GameBoard --> Road
@enduml
